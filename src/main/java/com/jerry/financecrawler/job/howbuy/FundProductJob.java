package com.jerry.financecrawler.job.howbuy;import com.jerry.financecrawler.commons.CommonsCharset;import com.jerry.financecrawler.commons.CommonsUrl;import com.jerry.financecrawler.commons.ProductFilter;import com.jerry.financecrawler.convert.SetValue;import com.jerry.financecrawler.convert.VoToPo;import com.jerry.financecrawler.db.dao.IFundProduct;import com.jerry.financecrawler.db.dao.IIncome;import com.jerry.financecrawler.db.po.FundProductPo;import com.jerry.financecrawler.db.po.IncomePo;import com.jerry.financecrawler.job.QuartzJob;import com.jerry.financecrawler.translate.howbuy.HtmlToFundProductVo;import com.jerry.financecrawler.visitor.HtmlRequest;import com.jerry.financecrawler.vo.FundProductTotalVo;import com.jerry.financecrawler.vo.FundProductVo;import com.jerry.financecrawler.vo.IncomeVo;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import javax.annotation.Resource;import java.util.List;/** * Created by Jerry on 2015/9/17. */public class FundProductJob implements QuartzJob {    /**     * Logger     */    private static final Logger log = LoggerFactory.getLogger(FundProductJob.class);    private static final String baseUrl = CommonsUrl.HOW_BUY_FINANCE_URL;    private static final String charset = CommonsCharset.UTF_8;    @Resource    private HtmlRequest htmlRequest;    @Resource    private HtmlToFundProductVo htmlToFundProductVo;    @Resource    private IFundProduct fundProductDao;    @Resource    private IIncome incomeDao;    @Override    public void execute() {        log.info("howbuy 基金产品采集服务启动");        try {            int index = 1;            int pageNum = 100;            FundProductTotalVo fundProductTotalVo = getHtmlData(index, pageNum, 0);            if (fundProductTotalVo != null) {                int allPages = fundProductTotalVo.getAllPages();                index++;                while (index <= allPages) {                    getHtmlData(index, pageNum, allPages);                    index++;                }            }        } catch (Exception ex) {            ex.printStackTrace();            log.error("Error " + this.getClass().getName() + "dealing FundProductJob data", ex);        }        log.info("howbuy 基金产品采集服务完成");    }    private FundProductTotalVo getHtmlData(int index, int pageNum, int allpages) throws Exception {        String url = CommonsUrl.getUrl(baseUrl, index, pageNum, 0);        String html = htmlRequest.getHtmlData(url, charset);        FundProductTotalVo fundProductTotalVo = null;        if (!html.equals("")) {            fundProductTotalVo = htmlToFundProductVo.parseToFundProductData(html);            // System.out.println("eastFinanceTotalVo = ["+eastFinanceTotalVo.toString()+"]");            if (fundProductTotalVo != null) {                List<FundProductVo> fundProductVoList = fundProductTotalVo.getDatas();                saveFundProductData(fundProductVoList);            }        }        return fundProductTotalVo;    }    private void saveFundProductData(List<FundProductVo> fundProductVoList) {        if (fundProductVoList != null) {            Integer maxId = fundProductDao.getMaxId();            if (maxId == null) maxId = 0;            for (int i = 0; i < fundProductVoList.size(); i++) {                FundProductVo midVo = fundProductVoList.get(i);                String product_code = midVo.getProduct_code();                String product_name = midVo.getProduct_name();                String product_type = midVo.getProduct_TYPE();                if (ProductFilter.filter(product_type, product_type)) {                    FundProductPo basePo = fundProductDao.findByCodeOrName(product_code, product_name);                    if (basePo != null) {                        SetValue.setFundProductPoValue(basePo, midVo);                        fundProductDao.modify(basePo);                        //System.out.println("basePo = [" + basePo + "]");                        // 收益                        IncomePo baseIncomePo = incomeDao.find(basePo.getId());                        if (baseIncomePo != null) {                            SetValue.setIncomePoValue(baseIncomePo, midVo.getIncomeVo());                            incomeDao.modify(baseIncomePo);                        } else {                            FundProductPo midPo = changeToPo(midVo);                            IncomePo incomePo =midPo.getIncomePo();                            incomePo.setProduct_id(basePo.getId());                            incomeDao.save(incomePo);                        }                    } else {                        FundProductPo midPo = changeToPo(midVo);                        midPo.setId(maxId + i + 1);                        fundProductDao.save(midPo);                        IncomePo incomePo =midPo.getIncomePo();                        incomePo.setProduct_id(midPo.getId());                        // 收益                        incomeDao.save(incomePo);                    }                }//if            }// for        }// if    }    private FundProductPo changeToPo(FundProductVo vo) {        //产品        FundProductPo po = VoToPo.fundProductVoToPo(vo);        //收益        IncomeVo incomeVo = vo.getIncomeVo();        IncomePo incomePo = VoToPo.incomeVoToPo(incomeVo);        po.setIncomePo(incomePo);        return po;    }}